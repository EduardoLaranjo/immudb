package immugw

import (
	"os"
	"github.com/spf13/cobra"
	"github.com/spf13/cobra/doc"
	"path/filepath"
)

const linuxManPath = "/usr/share/man/man1/"

var Cmd = &cobra.Command{
	Use:   "immugw",
	Short: "immu gateway: a smart REST proxy for immudb - the lightweight, high-speed immutable database for systems and applications",
	Long: `immu gateway: a smart REST proxy for immudb - the lightweight, high-speed immutable database for systems and applications.
It exposes all gRPC methods with a REST interface while wrapping all SAFE endpoints with a verification service.

Environment variables:
  IMMUGW_ADDRESS=127.0.0.1
  IMMUGW_PORT=3323
  IMMUGW_IMMUDBADDRESS=127.0.0.1
  IMMUGW_IMMUDBPORT=3322
  IMMUGW_PIDFILE=
  IMMUGW_LOGFILE=
  IMMUGW_DETACHED=false
  IMMUGW_MTLS=false
  IMMUGW_SERVERNAME=localhost
  IMMUGW_CERTIFICATE=./tools/mtls/4_client/certs/localhost.cert.pem
  IMMUGW_PKEY=./tools/mtls/4_client/private/localhost.key.pem
  IMMUGW_CLIENTCAS=./tools/mtls/2_intermediate/certs/ca-chain.cert.pem`,
	DisableAutoGenTag: true,
}

func InstallManPages() error{
	header := &doc.GenManHeader{
		Title: "immugw",
		Section: "1",
		Source: "Generated by immugw command",
	}
	dir := linuxManPath

	_ = os.Mkdir(dir, os.ModePerm)
	err := doc.GenManTree(Cmd , header, dir)
	if err != nil {
		return err
	}
	return nil
}

func UnistallManPages() error{
	return os.Remove( filepath.Join(linuxManPath, "immugw.1"))
}
